#! /bin/sh

# neato - temporary wrapper script for .libs/neato
# Generated by ltmain.sh - GNU libtool 1.5.14 (1.1220.2.195 2005/02/12 12:12:33)
#
# The neato program cannot be directly executed until all the libtool
# libraries that it depends on are installed.
#
# This wrapper script should never be moved out of the build directory.
# If it is, it will not operate correctly.

# Sed substitution that helps us do robust quoting.  It backslashifies
# metacharacters that are still active within double-quoted strings.
Xsed='/bin/sed -e 1s/^X//'
sed_quote_subst='s/\([\\`\\"$\\\\]\)/\\\1/g'

# The HP-UX ksh and POSIX shell print the target directory to stdout
# if CDPATH is set.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH

relink_command="(cd /home/SO/dalto/tmp/graphviz/graphviz-2.2.1/dotneato; { test -z \"\${LIBRARY_PATH+set}\" || unset LIBRARY_PATH || { LIBRARY_PATH=; export LIBRARY_PATH; }; }; { test -z \"\${COMPILER_PATH+set}\" || unset COMPILER_PATH || { COMPILER_PATH=; export COMPILER_PATH; }; }; { test -z \"\${GCC_EXEC_PREFIX+set}\" || unset GCC_EXEC_PREFIX || { GCC_EXEC_PREFIX=; export GCC_EXEC_PREFIX; }; }; { test -z \"\${LD_RUN_PATH+set}\" || unset LD_RUN_PATH || { LD_RUN_PATH=; export LD_RUN_PATH; }; }; PATH=\"/usr/kerberos/bin:/usr/java/j2sdk1.4.2_08/bin:/usr/ant/apache-ant-1.6.4/bin:/usr/eclipse:/usr/local/bin:/usr/bin:/bin:/usr/X11R6/bin:/home/SO/dalto/bin:/home/SO/dalto/javacc-3.2/bin/\"; export PATH; gcc -g -O2 -Wall -o \$progdir/\$file neato.o  -L/usr/local/lib ../dotneato/common/.libs/libcommon.so ../dotneato/gvrender/.libs/libgvrender.so /home/SO/dalto/tmp/graphviz/graphviz-2.2.1/dotneato/common/.libs/libcommon.so /home/SO/dalto/tmp/graphviz/graphviz-2.2.1/gd/.libs/libgvgd.so -lfontconfig /usr/lib/libfreetype.so /usr/lib/libjpeg.so -lpng /usr/lib/libexpat.so -lz ../dotneato/neatogen/.libs/libneatogen.so /home/SO/dalto/tmp/graphviz/graphviz-2.2.1/dotneato/pack/.libs/libpack.so /home/SO/dalto/tmp/graphviz/graphviz-2.2.1/pathplan/.libs/libpathplan.so -lm /home/SO/dalto/tmp/graphviz/graphviz-2.2.1/graph/.libs/libgraph.so /home/SO/dalto/tmp/graphviz/graphviz-2.2.1/cdt/.libs/libcdt.so -Wl,--rpath -Wl,/home/SO/dalto/tmp/graphviz/graphviz-2.2.1/dotneato/common/.libs -Wl,--rpath -Wl,/home/SO/dalto/tmp/graphviz/graphviz-2.2.1/dotneato/gvrender/.libs -Wl,--rpath -Wl,/home/SO/dalto/tmp/graphviz/graphviz-2.2.1/gd/.libs -Wl,--rpath -Wl,/home/SO/dalto/tmp/graphviz/graphviz-2.2.1/dotneato/neatogen/.libs -Wl,--rpath -Wl,/home/SO/dalto/tmp/graphviz/graphviz-2.2.1/dotneato/pack/.libs -Wl,--rpath -Wl,/home/SO/dalto/tmp/graphviz/graphviz-2.2.1/pathplan/.libs -Wl,--rpath -Wl,/home/SO/dalto/tmp/graphviz/graphviz-2.2.1/graph/.libs -Wl,--rpath -Wl,/home/SO/dalto/tmp/graphviz/graphviz-2.2.1/cdt/.libs -Wl,--rpath -Wl,/usr/local/lib/graphviz)"

# This environment variable determines our operation mode.
if test "$libtool_install_magic" = "%%%MAGIC variable%%%"; then
  # install mode needs the following variable:
  notinst_deplibs=' ../dotneato/common/libcommon.la ../dotneato/gvrender/libgvrender.la /home/SO/dalto/tmp/graphviz/graphviz-2.2.1/dotneato/common/libcommon.la /home/SO/dalto/tmp/graphviz/graphviz-2.2.1/gd/libgvgd.la ../dotneato/neatogen/libneatogen.la /home/SO/dalto/tmp/graphviz/graphviz-2.2.1/dotneato/pack/libpack.la /home/SO/dalto/tmp/graphviz/graphviz-2.2.1/pathplan/libpathplan.la /home/SO/dalto/tmp/graphviz/graphviz-2.2.1/graph/libgraph.la /home/SO/dalto/tmp/graphviz/graphviz-2.2.1/cdt/libcdt.la'
else
  # When we are sourced in execute mode, $file and $echo are already set.
  if test "$libtool_execute_magic" != "%%%MAGIC variable%%%"; then
    echo="echo"
    file="$0"
    # Make sure echo works.
    if test "X$1" = X--no-reexec; then
      # Discard the --no-reexec flag, and continue.
      shift
    elif test "X`($echo '\t') 2>/dev/null`" = 'X\t'; then
      # Yippee, $echo works!
      :
    else
      # Restart under the correct shell, and then maybe $echo will work.
      exec /bin/sh "$0" --no-reexec ${1+"$@"}
    fi
  fi

  # Find the directory that this script lives in.
  thisdir=`$echo "X$file" | $Xsed -e 's%/[^/]*$%%'`
  test "x$thisdir" = "x$file" && thisdir=.

  # Follow symbolic links until we get to the real thisdir.
  file=`ls -ld "$file" | /bin/sed -n 's/.*-> //p'`
  while test -n "$file"; do
    destdir=`$echo "X$file" | $Xsed -e 's%/[^/]*$%%'`

    # If there was a directory component, then change thisdir.
    if test "x$destdir" != "x$file"; then
      case "$destdir" in
      [\\/]* | [A-Za-z]:[\\/]*) thisdir="$destdir" ;;
      *) thisdir="$thisdir/$destdir" ;;
      esac
    fi

    file=`$echo "X$file" | $Xsed -e 's%^.*/%%'`
    file=`ls -ld "$thisdir/$file" | /bin/sed -n 's/.*-> //p'`
  done

  # Try to get the absolute directory name.
  absdir=`cd "$thisdir" && pwd`
  test -n "$absdir" && thisdir="$absdir"

  program=lt-'neato'
  progdir="$thisdir/.libs"

  if test ! -f "$progdir/$program" || \
     { file=`ls -1dt "$progdir/$program" "$progdir/../$program" 2>/dev/null | /bin/sed 1q`; \
       test "X$file" != "X$progdir/$program"; }; then

    file="$$-$program"

    if test ! -d "$progdir"; then
      mkdir -p "$progdir"
    else
      rm -f "$progdir/$file"
    fi

    # relink executable if necessary
    if test -n "$relink_command"; then
      if relink_command_output=`eval $relink_command 2>&1`; then :
      else
	echo "$relink_command_output" >&2
	rm -f "$progdir/$file"
	exit 1
      fi
    fi

    mv -f "$progdir/$file" "$progdir/$program" 2>/dev/null ||
    { rm -f "$progdir/$program";
      mv -f "$progdir/$file" "$progdir/$program"; }
    rm -f "$progdir/$file"
  fi

  if test -f "$progdir/$program"; then
    if test "$libtool_execute_magic" != "%%%MAGIC variable%%%"; then
      # Run the actual program with our arguments.

      exec $progdir/$program ${1+"$@"}

      $echo "$0: cannot exec $program ${1+"$@"}"
      exit 1
    fi
  else
    # The program doesn't exist.
    $echo "$0: error: $progdir/$program does not exist" 1>&2
    $echo "This script is just a wrapper for $program." 1>&2
    echo "See the libtool documentation for more information." 1>&2
    exit 1
  fi
fi
